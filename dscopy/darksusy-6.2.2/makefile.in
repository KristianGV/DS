# Main makefile for DarkSUSY.
# Technical questions about this makefile should be directed to
# Joakim Edsjo, edsjo@fysik.su.se
# Date: February 7, 2016
# Note that this file follows a certain structure and it is also updated
# automatically, e.g. when modules are added/deleted by the script
# scr/update_mainmf.pl. Hence, don't delete comments below which needed for
# for this process to work (they are marked that they should not be deleted).

# This file will create libds_core.a and other libraries
# It will also create binary tables from the supplied ascii tables
# to speed up particle yield calculations.
# This file is created from makefile.in by running ./configure.
# Type 'make' to make DarkSUSY
# Type 'make install' to install (default is in /usr/local)

###############################################################
### You shouldn't really change anything in this file.      ###
### You should instead set options when running ./configure ###
### There are examples of this in e.g. conf.gfortran and    ###
### conf.ifort.                                             ###
###############################################################

###### Compiler and compiler options                     ######
###### DarkSUSY root directory and Feynhiggs directories ######

# DS_ROOT is the root directory of DarkSUSY.
# DS_INSTALL is the install directory. When DarkSUSY is installed, you
# can in principle delete the DarkSUSY root directory if you wish.

# Note that, on some systems (e.g. Mac OS X), the files in 
# src/xfeynhiggs need the option -femulate-complex, so define
# separate compilation options for these files using the variable FOPTFH. 
# It doesn't seem necessary to compile the full FeynHiggs package with these
# options (the compile is extremeley slow in this case).

### GNU fortran g77 ###
# NOTE: One some systems, the -ffast-math option causes problems. If this
# is the case, please take it away, execute 'make clobber' to clean up and
# redo the 'make'
FF=@F77@
FOPT=@FOPT@
FFLAGS=$(FOPT)
FOPTFH = @FOPT@

# Determine where to install stuff (prefix is set in configure)
prefix=@prefix@
# DS_INSTALL is where the library and data files will be installed
DS_INSTALL=${prefix}
# DS_ROOT is where the root of the distribution is
DS_ROOT=$(PWD)
ADD_SCR=$(DS_INSTALL)/scr/add_libs.pl

#### Contributed packages #####
# The actual versions of these contributed packages to use are set
# in configure.ac (that is transferred to configure with autoconf).
# To change these permanently, edit configure.ac and rerun autoconf
# To change temporarily, the preferred way is to run configure
# giving your preferred version as an argument, e.g.on the form
# ./configure ISAJETDIR=/data1/edsjo/DarkSUSY/library/trunk/contrib/isajet778-for-darksusy
# You can also modify the makefile directly, but those changes will be
# overwritten the next time you run configure.
FEYNHIGGSDIR=@FEYNHIGGSDIR@
ISAJETDIR=@ISAJETDIR@
HBDIR=@HIGGSBOUNDSDIR@
HSDIR=@HIGGSSIGNALSDIR@
SLHADIR=@SLHADIR@
TSPACKDIR=@TSPACKDIR@
SUPERISODIR=@SUPERISODIR@
HEALPIXDIR=@HEALPIXDIR@

LIB=${DS_INSTALL}/lib

###############################################
#### DO NOT CHANGE ANYTHING BELOW THIS LINE ###
###############################################

#all : feynhiggs higgsbounds darksusy libisajet galprop mains_if_loc
all : makedirs feynhiggs higgsbounds higgssignals superiso tspack healpix darksusy libisajet mains

default: darksusy libisajet mains_if_loc

#darksusy : darksusy_lib dsgalprop inst_tab_if_loc
darksusy : ds_core ds_common ds_empty ds_generic_decayingDM ds_generic_wimp ds_mssm ds_silveira_zee ds_vdSIDM inst_tab_if_loc

makedirs :
	mkdir -p lib
	mkdir -p contrib/include

mains :
	cd examples; make
	cd examples/test; make

config_paths config :
	perl $(DS_ROOT)/scr/config2.pl $(DS_ROOT) $(DS_INSTALL)

ds_core :
	mkdir -p lib
	mkdir -p tmp/build-src
	mkdir -p tmp/build-src-user
#	rm -f lib/libds_core.a
	cd $(DS_ROOT)/src; make all

ds_common:
	mkdir -p tmp/build-common

# Module builds start here. Don't delete this comment. [MODSTART]

# Module ds_empty. Code below auto-generated by update_mainmf.pl
ds_empty :
	mkdir -p lib
	mkdir -p tmp/build-empty
	mkdir -p tmp/build-empty-user
	cd $(DS_ROOT)/src_models/empty; make all

# Module ds_generic_decayingDM. Code below auto-generated by update_mainmf.pl
ds_generic_decayingDM :
	mkdir -p lib
	mkdir -p tmp/build-generic_decayingDM
	mkdir -p tmp/build-generic_decayingDM-user
	cd $(DS_ROOT)/src_models/generic_decayingDM; make all

# Module ds_generic_wimp. Code below auto-generated by update_mainmf.pl
ds_generic_wimp :
	mkdir -p lib
	mkdir -p tmp/build-generic_wimp
	mkdir -p tmp/build-generic_wimp-user
	cd $(DS_ROOT)/src_models/generic_wimp; make all

# Module ds_mssm. Code below auto-generated by update_mainmf.pl
ds_mssm :
	mkdir -p lib
	mkdir -p tmp/build-mssm
	mkdir -p tmp/build-mssm-user
	cd $(DS_ROOT)/src_models/mssm; make all

# Module ds_silveira_zee. Code below auto-generated by update_mainmf.pl
ds_silveira_zee :
	mkdir -p lib
	mkdir -p tmp/build-silveira_zee
	mkdir -p tmp/build-silveira_zee-user
	cd $(DS_ROOT)/src_models/silveira_zee; make all

# Module ds_vdSIDM. Code below auto-generated by update_mainmf.pl
ds_vdSIDM :
	mkdir -p lib
	mkdir -p tmp/build-vdSIDM
	mkdir -p tmp/build-vdSIDM-user
	cd $(DS_ROOT)/src_models/vdSIDM; make all

rmmodx :
	rm -f $(DS_ROOT)/examples/ds_common
	rm -f $(DS_ROOT)/examples/ds_empty
	rm -f $(DS_ROOT)/examples/ds_generic_decayingDM
	rm -f $(DS_ROOT)/examples/ds_generic_wimp
	rm -f $(DS_ROOT)/examples/ds_mssm
	rm -f $(DS_ROOT)/examples/ds_silveira_zee
	rm -f $(DS_ROOT)/examples/ds_vdSIDM

# Module builds end here. Don't delete this comment. [MODEND]

install : install_builds install_tables

# This target creates binary tables and main programs right away if 
# install is local i.e. make install not needed afterwards in this case
# The empty printf statement is to avoid excessive output from make
inst_tab_if_loc :
	@printf ""; \
	if [ -f $(DS_INSTALL)/makefile.in ] ; then \
		make install_tables ; \
	fi

mains_if_loc : 
	if [ -f $(DS_INSTALL)/makefile.in ] ; then \
		cd examples ; make ; \
		cd test ; make ; \
	fi


# Only install builds if DS_INSTALL points to some other directory
# than DS_ROOT
install_builds:
	if [ ! -f $(DS_INSTALL)/makefile.in ] ; then \
		echo 'The install directory is different from DS_ROOT' ; \
		echo 'Will install libraries and major data files.' ; \
		mkdir -p $(DS_INSTALL) ; \
		tar cf - lib data include --exclude .svn | (cd $(DS_INSTALL); tar xvf -) ; \
	fi


#dsgalprop:
#	if [ `ar t $(DS_ROOT)/lib/libds_core.a dsgalprop.o` ] ; then \
#	cd $(DS_ROOT)/src/xgalprop ; make full ; \
#	else \
#	cd $(DS_ROOT)/src/xgalprop ; make fast ; \
#	fi

cfitsio:
	cd $(DS_ROOT)/contrib/cfitsio ; make ; \
	cp libcfitsio.a $(DS_INSTALL)/lib/

healpix: cfitsio
	cd ${HEALPIXDIR} ; \
	mkdir -p lib include bin build ; \
	sh configure_darksusy ; \
	make f90-all ; \
	cp lib/libgif.a $(DS_INSTALL)/lib/ ;\
	cp lib/libhealpix.a $(DS_INSTALL)/lib/ ;\
	cp lib/libhpxgif.a $(DS_INSTALL)/lib/ ;\
	cp lib/libsharp_healpix_f.a $(DS_INSTALL)/lib/ ;\
	cp include/pix_tools.mod $(DS_INSTALL)/src/include

test:
	cd $(DS_ROOT)/test; make all

really_all : all install_tables

check:
	echo "this should run the test programs"

installcheck:
	echo "this should test the installation"

install_tables :
	mkdir -p $(DS_INSTALL)/data
	cd $(DS_ROOT)/data; make all

libisajet :
	cd $(ISAJETDIR); make libisajet.a; \
	cp -p isajet/libisajet.a $(DS_ROOT)/lib/

libisajet_shared :
	cd $(ISAJETDIR); make libisajet.so \
	cp -p isajet/libisajet.so $(DS_ROOT)/lib/

tspack:
	cd $(TSPACKDIR); make

feynhiggs :
	cd $(FEYNHIGGSDIR); \
	make FC="$(FF)" FFLAGS="$(FOPT)" CFLAGS="-fPIC" lib ;  \
	cp -p build/libFH.a $(DS_ROOT)/lib/ ; \
	cp -p build/include/FHCouplings.h $(DS_ROOT)/contrib/include/ ;  \
	cp -p build/include/SLHA.h $(DS_ROOT)/contrib/include/  ; \
	cp -p build/include/SLHADefs.h $(DS_ROOT)/contrib/include/  ; \
	cp -p build/include/PDG.h $(DS_ROOT)/contrib/include/ 

feynhiggs_shared :
	cd $(FEYNHIGGSDIR); \
	make FC="$(FF)" FFLAGS="$(FOPT)" CFLAGS="-fPIC" lib_shared ;  \
	cp -p build/libFH.so $(DS_ROOT)/lib/ ; \
	cp -p build/include/FHCouplings.h $(DS_ROOT)/contrib/include/ ;  \
	cp -p build/include/SLHA.h $(DS_ROOT)/contrib/include/  ; \
	cp -p build/include/SLHADefs.h $(DS_ROOT)/contrib/include/  ; \
	cp -p build/include/PDG.h $(DS_ROOT)/contrib/include/ 

superiso :
	cd $(SUPERISODIR); \
	make slha ; \
	make libisospin.a ; \
	cp -p src/libisospin.a $(DS_ROOT)/lib/ 

higgsbounds :
	cd $(HBDIR); \
	make -f makefile_darksusy libHB ; \
	cp -p libHB.a $(DS_ROOT)/lib/

higgsbounds_shared :
	cd $(HBDIR); \
	make -f makefile_darksusy libHB_shared ; \
	cp -p libHB.so $(DS_ROOT)/lib/

higgssignals :
	cd $(HSDIR); \
	make -f makefile_darksusy libHS ; \
	cp -p libHS.a $(DS_ROOT)/lib/

# SLHA is currently not built, as feynhiggs includes slhalib
slha :
	cd $(SLHADIR); \
	make ; \
	make install ; \
	cp -p ds/lib/libSLHA.a $(DS_ROOT)/lib/ ; \
	cp -p ds/include/SLHA.h $(DS_ROOT)/include/ ; \
	cp -p ds/include/SLHADefs.h $(DS_ROOT)/include/ ; \
	cp -p ds/include/PDG.h $(DS_ROOT)/include/ 

#galprop:
#	cd $(DS_ROOT)/src/xgalprop ; make full
##	cd $(DS_ROOT)/contrib/galprop/v42.3ds; make
##	cd $(DS_ROOT)/contrib/galprop/v50p; make
#	cd $(DS_ROOT); if [ -f .no_cfitsio ]; then\
#		make cfitsio; rm .no_cfitsio; fi

clean :
	cd $(DS_ROOT)/src; $(MAKE) clean
	cd $(DS_ROOT)/data; $(MAKE) clean
	cd $(DS_ROOT)/docs; rm -f *.aux; rm -f *.log; rm -f *.dvi
	cd $(ISAJETDIR); $(MAKE) clean
#	cd $(DS_ROOT)/contrib/galprop/v42.3ds; $(MAKE) clean
#	cd $(DS_ROOT)/contrib/galprop/v50p; $(MAKE) clean
	cd $(FEYNHIGGSDIR); $(MAKE) clean ; rm -fr ds
	cd $(SUPERISODIR); $(MAKE) clean
	cd $(SLHADIR); $(MAKE) clean ; rm -fr ds
	cd $(HBDIR); $(MAKE) -f makefile_darksusy -i hyperclean
	cd $(HSDIR); $(MAKE) -f makefile_darksusy -i hyperclean
	cd $(TSPACKDIR); $(MAKE) clean


clobber distclean : clean rmmore

# rmmore removes things added in the DarkSUSY root during configure
# and build
rmmore:
	rm -f $(DS_ROOT)/lib/libds_*.a
	rm -f $(DS_ROOT)/lib/libisajet.a
	rm -f $(DS_ROOT)/lib/libisospin.a
	rm -f $(DS_ROOT)/lib/libFH.a
	rm -f $(DS_ROOT)/lib/libSLHA.a
	rm -f $(DS_ROOT)/lib/libHB.a
	rm -f $(DS_ROOT)/lib/libHS.a
	rm -f $(DS_ROOT)/lib/libds*.so
	rm -f $(DS_ROOT)/lib/aldata.o
	rm -f $(DS_ROOT)/lib/libcfitsio.a
	rm -f $(DS_ROOT)/data/ascii2bin
	rm -f $(DS_ROOT)/data/we-res*.bin
	rm -f $(DS_ROOT)/data/sim*.bin
	rm -f $(DS_ROOT)/include/{SLHA,SLHADefs,PDG}.h
	rm -f $(DS_ROOT)/docs/Manual*.tex
	rm -f $(DS_ROOT)/docs/Manual*.pdf
	rm -f $(DS_ROOT)/lib/libgif.a
	rm -f $(DS_ROOT)/lib/libhealpix.a
	rm -f $(DS_ROOT)/lib/libhpxgif.a
	rm -f $(DS_ROOT)/lib/libsharp_healpix_f.a
	find . -name '#*' -exec rm -f {} \;
	find . -name '*~' -exec rm -f {} \;
	find . -name '._*' -exec rm -f {} \;
	find . -name '*.o' -exec rm -f {} \;
	find . -name 'test' -perm +u=x -type f -exec rm -f {} \;
	rm -f `find . -name makefile.in | sed s/\.in//`
	rm -f `find . -name makefile_darksusy.in | sed s/\.in//`
	rm -f config.log config.status
	rm -fr autom4te.cache
	rm -f src/ini/dsversion.h
	rm -f src/ini/dsdir.h
#	rm -f contrib/galprop/v42.3ds/Configure.cc
#	rm -f contrib/galprop/v42.3ds/nuc_package.cc
#	rm -f contrib/galprop/v42.3ds/WNEWTR_FUNC_aws.f
	rm -f .no_cfitsio
	cd contrib/cfitsio; make -k distclean; cd $(DS_ROOT)
	cd ${HEALPIXDIR} ; make distclean; cd $(DS_ROOT) 
	cd tmp; rm -fr build* ; cd $(DS_ROOT)
	cd src/include; rm -f *.mod; cd $(DS_ROOT)
#	find . -name '.[a-z,A-Z,#]*' -exec rm -f {} \;

# uninstall removes things in the install directory
# Note, we have to check if the install directory is the current working
# directory, in which case some things should be kept
# We do this by checking if makefile.in is in the install directory.
# If it is, we know that DS_INSTALL must point to DS_ROOT.
uninstall:
	rm -f $(DS_INSTALL)/lib/libds_*.a
	rm -f $(DS_INSTALL)/lib/aldata.o
	if [ ! -f $(DS_INSTALL)/makefile.in ] ; then \
		echo 'The install directory is different from DS_ROOT' ; \
		echo 'Will clean up the install directory.' ; \
		rm -f `find include -name '*.h' | sed s#^#${DS_INSTALL}/#` ; \
		rm -fr $(DS_INSTALL)/share/DarkSUSY ; \
	fi

docs manual: pdf-manual pdf-manual-long

pdf-manual pdf-Manual manual-short:
	scr/harvestdoc.pl
	cd $(DS_ROOT)/docs; pdflatex Manual; makeindex Manual; bibtex Manual; pdflatex Manual; makeindex Manual; pdflatex Manual; pdflatex Manual

pdf-manual-debug pdf-Manual-debug manual-short-debug:
	scr/harvestdoc.pl --debug
	cd $(DS_ROOT)/docs; pdflatex Manual-debug; makeindex Manual-debug; bibtex Manual-debug; pdflatex Manual-debug; makeindex Manual-debug; pdflatex Manual-debug; pdflatex Manual-debug

pdf-manual-long pdf-Manual-long :
	scr/harvestdoc.pl --long
	cd $(DS_ROOT)/docs; \
	pdflatex Manual-long; makeindex Manual-long; bibtex Manual-long; pdflatex Manual-long; makeindex Manual-long; pdflatex Manual-long; pdflatex Manual-long;

pdf-manual-long-debug pdf-Manual-long-debug :
	scr/harvestdoc.pl --long --debug
	cd $(DS_ROOT)/docs; \
	pdflatex Manual-long-debug; makeindex Manual-long-debug; bibtex Manual-long-debug; pdflatex Manual-long-debug; makeindex Manual-long-debug; pdflatex Manual-long-debug; pdflatex Manual-long-debug;

coffee :
	echo 'Sorry, DarkSUSY cannot make coffee yet...';


# Below are instructions for shared libraries, currently used by GAMBIT

ds_mssm_shared : lib/libds_mssm.a lib/libds_empty.a lib/libds_core.a lib/libHS.a lib/libHB.a lib/libFH.a lib/libisospin.a lib/libisajet.a
	$(ADD_SCR) $(DS_INSTALL)/lib/libds_core_mssm.so $(DS_INSTALL)/lib/libds_mssm.a $(DS_INSTALL)/lib/libds_empty.a $(DS_INSTALL)/lib/libds_core.a $(DS_INSTALL)/lib/libHS.a $(DS_INSTALL)/lib/libHB.a $(DS_INSTALL)/lib/libFH.a $(DS_INSTALL)/lib/libisospin.a $(DS_INSTALL)/lib/libisajet.a

ds_generic_decayingDM_shared : lib/libds_generic_decayingDM.a lib/libds_empty.a lib/libds_core.a
	$(ADD_SCR) $(DS_INSTALL)/lib/libds_core_generic_decayingDM.so $(DS_INSTALL)/lib/libds_generic_decayingDM.a $(DS_INSTALL)/lib/libds_empty.a $(DS_INSTALL)/lib/libds_core.a 

ds_generic_wimp_shared : lib/libds_generic_wimp.a lib/libds_empty.a lib/libds_core.a
	$(ADD_SCR) $(DS_INSTALL)/lib/libds_core_generic_wimp.so $(DS_INSTALL)/lib/libds_generic_wimp.a $(DS_INSTALL)/lib/libds_empty.a $(DS_INSTALL)/lib/libds_core.a 

ds_silveira_zee_shared : lib/libds_silveira_zee.a lib/libds_empty.a lib/libds_core.a
	$(ADD_SCR) $(DS_INSTALL)/lib/libds_core_silveira_zee.so $(DS_INSTALL)/lib/libds_silveira_zee.a $(DS_INSTALL)/lib/libds_empty.a $(DS_INSTALL)/lib/libds_core.a 

ds_vdSIDM_shared : lib/libds_vdSIDM.a lib/libds_empty.a lib/libds_core.a
	$(ADD_SCR) $(DS_INSTALL)/lib/libds_core_vdSIDM.so $(DS_INSTALL)/lib/libds_vdSIDM.a $(DS_INSTALL)/lib/libds_empty.a $(DS_INSTALL)/lib/libds_core.a 

.PHONY: all config_paths darksusy_lib dslib private install_tables \
	clean clobber uninstall rmmore libisajet pdf-manual \
	darksusy feynhiggs higgsbounds pdf-manual-long pdf-manual-debug \
	mains_if_loc inst_tab_if_loc

.NOTPARALLEL: 
